/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.neu.csye6200.views;

import edu.neu.csye6200.model.Student;
import edu.neu.csye6200.model.*;

import java.awt.BorderLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.*;
import static edu.neu.csye6200.DB.db;
import java.sql.ResultSet;
import java.sql.SQLException;
import edu.neu.csye6200.DB;
import edu.neu.csye6200.controllers.ImmunizationJdbc;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.lang.Thread;



/**
 *
 * @author Vaishu
 */
public class ImmunizationRecord extends javax.swing.JFrame {
    Imunnization immune = new Imunnization();
        ImmunizationJdbc jdbc = new ImmunizationJdbc();

    private DefaultTableModel model = new DefaultTableModel(columns, 0);
    // Create the table
    private JTable table = new JTable(model);
    // Create the main panel
    private JPanel mainPanel = new JPanel(new BorderLayout());
    /**
     * Creates new form Immunization
     */
    ResultSet rs;
    ResultSet rs1;
    ResultSet rs2;
    ResultSet rs3;
    public static final String[] columns = {
        "Name", "Age", "Address"
    };
    public ImmunizationRecord() throws SQLException {
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        studentIdinView = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Immunization Record");
        setBackground(new java.awt.Color(0, 153, 153));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setForeground(new java.awt.Color(0, 153, 153));
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 6, 12));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Student Immunization Record");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "HIB", "", null, null},
                {null, "TDap", "", null, null},
                {null, "Polio", "", null, null},
                {null, "Hepatitis B", "", null, null},
                {null, "MMR", "", null, null},
                {null, "Varicella", "", null, null},
                {null, "Influenza", "", null, null}
            },
            new String [] {
                "SV ID", "Vaccine Name", "Last Dose Date", "Next Due Date", "Vaccinated"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setMinimumSize(new java.awt.Dimension(80, 175));
        jTable1.setRowHeight(25);
        jTable1.setRowMargin(2);
        jTable1.setShowGrid(true);
        jTable1.setSurrendersFocusOnKeystroke(true);
        jScrollPane1.setViewportView(jTable1);

        jLabel9.setText("Student Id:");

        jButton1.setText("Show Data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(228, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(199, 199, 199))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(studentIdinView, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(354, 354, 354))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(384, 384, 384))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(159, 159, 159))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(studentIdinView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(75, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        
        try {
            // TODO add your handling code here:
            view();
            alert();
            
        } catch (SQLException ex) {
            Logger.getLogger(ImmunizationRecord.class.getName()).log(Level.SEVERE, null, ex);
        }
        
       
        
    }//GEN-LAST:event_jButton1ActionPerformed

    
     String birthdate;
     private void alert() throws SQLException{
         LocalDate now= LocalDate.now();
         LocalDate[] nextdosedate = null;
         db = DB.getObj();
         String nd[]=new String[7];
         JOptionPane.showMessageDialog(null, "next dose date is still due");

        ResultSet rs = db.query("select next_dose_due_date from immunization_record where student_id = '1'");
        
        int k = 0;
        while(rs.next()){
                nd[k] = rs.getString("next_dose_due_date");
                nextdosedate[k] = LocalDate.parse(nd[k]);
                int compareDates = now.compareTo(nextdosedate[k]);
                if (compareDates > 0) {
                JOptionPane.showMessageDialog(null, "next dose date is still due for "+nextdosedate[k]);
                }

                k++;
        }
       
         
     }
     
    private void view() throws SQLException{
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
//    if( i>=0){

        Connection con = DriverManager.getConnection("jdbc:mysql://sql773.main-hosting.eu/u625234325_ood_proj", "u625234325_ood_proj", "Northeastern@4126");
        Statement stmt = con.createStatement();
        String svid[] = new String[7];
        String ld[]= new String[7];
        String nd[]=new String[7];
        String isVaccinated[] = new String[7];

     
//    if( i>=0){


       

        db = DB.getObj();

        rs = db.query("select svid from immunization_record where student_id = "+ studentIdinView.getText() );
        int i = 0;
        while(rs.next()){
            svid[i] = rs.getString("svid");
            i++;
        }
//        while(rs1.next()){
//        String svid_db = rs1.getString("svid");
//        }

//First column - SVID
        Student s=new Student();
        for (int v = 0; v < 7; v++) {
            model.setValueAt(svid[v], v, 0);
        }



//Second column - Last due date
        rs1 = db.query("select last_dose_date from immunization_record where student_id = "+ studentIdinView.getText() );
        int j = 0;
        while(rs1.next()){
            ld[j] = rs1.getString("last_dose_date");
            j++;
        }
        for (int v = 0; v < 7; v++) {
            model.setValueAt(ld[v], v, 2);
        }


//Fourth Column - Next Due Date

        rs2 = db.query("select next_dose_due_date from immunization_record where student_id = "+ studentIdinView.getText());
        int k = 0;
        while(rs2.next()){
            nd[k] = rs2.getString("next_dose_due_date");
            k++;
        }
        for (int v = 0; v < 7; v++) {
            model.setValueAt(nd[v] , v , 3);
        }



//Fifth Column - Vaccinated

        rs3 = db.query("select vaccinated from immunization_record where student_id = "+ studentIdinView.getText());
        int l = 0;
        while(rs3.next()){
            isVaccinated[l] = rs3.getString("vaccinated");
            l++;
        }
        for (int v = 0; v < 7; v++) {
            model.setValueAt(isVaccinated[v], v, 4);
        }
       
    }   
    /**
     * 
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImmunizationRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImmunizationRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImmunizationRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImmunizationRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ImmunizationRecord().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(ImmunizationRecord.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField studentIdinView;
    // End of variables declaration//GEN-END:variables
    
    public JTable getjTable1() {
       
        return jTable1;
        
    }

    public void setjTable1(JTable jTable1) {
        this.jTable1 = jTable1;
    }

    private static class LocalDatTime {

        public LocalDatTime() {
        }
    }

    

}
